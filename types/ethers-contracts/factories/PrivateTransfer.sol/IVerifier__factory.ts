/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

  import { Contract, Interface, type ContractRunner } from "ethers";
  import type { IVerifier, IVerifierInterface } from "../../PrivateTransfer.sol/IVerifier.js";

  const _abi = [
  {
    "inputs": [
      {
        "internalType": "uint256[2]",
        "name": "_pA",
        "type": "uint256[2]"
      },
      {
        "internalType": "uint256[2][2]",
        "name": "_pB",
        "type": "uint256[2][2]"
      },
      {
        "internalType": "uint256[2]",
        "name": "_pC",
        "type": "uint256[2]"
      },
      {
        "internalType": "uint256[4]",
        "name": "_pubSignals",
        "type": "uint256[4]"
      }
    ],
    "name": "verifyProof",
    "outputs": [
      {
        "internalType": "bool",
        "name": "",
        "type": "bool"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  }
] as const;

  export class IVerifier__factory {
    static readonly abi = _abi;
    static createInterface(): IVerifierInterface {
      return new Interface(_abi) as IVerifierInterface;
    }
    static connect(address: string, runner?: ContractRunner | null): IVerifier {
      return new Contract(address, _abi, runner) as unknown as IVerifier;
    }
  }
  