/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type { Addressable } from "ethers";
import { Contract, ContractFactory, ContractTransactionResponse, Interface } from "ethers"
import type { Signer, AddressLike, ContractDeployTransaction, ContractRunner } from "ethers"
import type { NonPayableOverrides } from "../../common.js"
  import type { PrivateTransfer, PrivateTransferInterface } from "../../PrivateTransfer.sol/PrivateTransfer.js";

  const _abi = [
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "_verifierAddress",
        "type": "address"
      }
    ],
    "stateMutability": "nonpayable",
    "type": "constructor"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "uint256",
        "name": "assetId",
        "type": "uint256"
      }
    ],
    "name": "AssetRegistered",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "address",
        "name": "user",
        "type": "address"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "newCommitment",
        "type": "uint256"
      }
    ],
    "name": "BalanceCommitmentUpdated",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "address",
        "name": "from",
        "type": "address"
      },
      {
        "indexed": true,
        "internalType": "address",
        "name": "to",
        "type": "address"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "timestamp",
        "type": "uint256"
      }
    ],
    "name": "TransferExecuted",
    "type": "event"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "",
        "type": "address"
      }
    ],
    "name": "balanceCommitments",
    "outputs": [
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "user",
        "type": "address"
      }
    ],
    "name": "getBalanceCommitment",
    "outputs": [
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "commitment",
        "type": "uint256"
      }
    ],
    "name": "initializeBalance",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "assetId",
        "type": "uint256"
      }
    ],
    "name": "isValidAsset",
    "outputs": [
      {
        "internalType": "bool",
        "name": "",
        "type": "bool"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256[2]",
        "name": "pA",
        "type": "uint256[2]"
      },
      {
        "internalType": "uint256[2][2]",
        "name": "pB",
        "type": "uint256[2][2]"
      },
      {
        "internalType": "uint256[2]",
        "name": "pC",
        "type": "uint256[2]"
      },
      {
        "internalType": "uint256[4]",
        "name": "pubSignals",
        "type": "uint256[4]"
      },
      {
        "internalType": "address",
        "name": "recipient",
        "type": "address"
      }
    ],
    "name": "privateTransfer",
    "outputs": [
      {
        "internalType": "bool",
        "name": "",
        "type": "bool"
      }
    ],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "assetId",
        "type": "uint256"
      }
    ],
    "name": "registerAsset",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      }
    ],
    "name": "validAssets",
    "outputs": [
      {
        "internalType": "bool",
        "name": "",
        "type": "bool"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "verifier",
    "outputs": [
      {
        "internalType": "contract IVerifier",
        "name": "",
        "type": "address"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  }
] as const;

  const _bytecode = "0x608060405234801561000f575f5ffd5b50604051610eaf380380610eaf833981810160405281019061003191906100d4565b805f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506100ff565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6100a38261007a565b9050919050565b6100b381610099565b81146100bd575f5ffd5b50565b5f815190506100ce816100aa565b92915050565b5f602082840312156100e9576100e8610076565b5b5f6100f6848285016100c0565b91505092915050565b610da38061010c5f395ff3fe608060405234801561000f575f5ffd5b5060043610610086575f3560e01c80636d227086116100595780636d22708614610124578063bcebf17d14610154578063d915433c14610170578063db0aeda2146101a057610086565b80632b7ac3f31461008a57806351b1e524146100a8578063582fd617146100d857806369160e9e146100f4575b5f5ffd5b6100926101d0565b60405161009f91906107f8565b60405180910390f35b6100c260048036038101906100bd9190610850565b6101f4565b6040516100cf9190610893565b60405180910390f35b6100f260048036038101906100ed91906108d6565b610209565b005b61010e60048036038101906101099190610968565b6102c0565b60405161011b91906109fc565b60405180910390f35b61013e600480360381019061013991906108d6565b6105e3565b60405161014b91906109fc565b60405180910390f35b61016e600480360381019061016991906108d6565b610600565b005b61018a60048036038101906101859190610850565b610712565b6040516101979190610893565b60405180910390f35b6101ba60048036038101906101b591906108d6565b610758565b6040516101c791906109fc565b60405180910390f35b5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6001602052805f5260405f205f915090505481565b60025f8281526020019081526020015f205f9054906101000a900460ff1615610267576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161025e90610a6f565b60405180910390fd5b600160025f8381526020019081526020015f205f6101000a81548160ff021916908315150217905550807fcc7b4929606ce963ba54b6a998f106f7748e78c03dc7f08fd77aeb28230eb2d360405160405180910390a250565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635fe8c13b878787876040518563ffffffff1660e01b81526004016103209493929190610b6e565b602060405180830381865afa15801561033b573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061035f9190610bdd565b61039e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161039590610c52565b60405180910390fd5b5f835f600481106103b2576103b1610c70565b5b602002013590505f846001600481106103ce576103cd610c70565b5b602002013590505f856002600481106103ea576103e9610c70565b5b6020020135905060025f8281526020019081526020015f205f9054906101000a900460ff1661044e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161044590610ce7565b60405180910390fd5b8260015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508160015f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508473ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fc95d558e25335222b51e6424166172914e7ce4404a9647d3631ef320294081fd4260405161052f9190610893565b60405180910390a33373ffffffffffffffffffffffffffffffffffffffff167f75e7011ff669e23cdc572a214c368d204773a17f91b72a9fc71b674c5548aaf68460405161057d9190610893565b60405180910390a28473ffffffffffffffffffffffffffffffffffffffff167f75e7011ff669e23cdc572a214c368d204773a17f91b72a9fc71b674c5548aaf6836040516105cb9190610893565b60405180910390a26001935050505095945050505050565b6002602052805f5260405f205f915054906101000a900460ff1681565b5f60015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20541461067f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067690610d4f565b60405180910390fd5b8060015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055503373ffffffffffffffffffffffffffffffffffffffff167f75e7011ff669e23cdc572a214c368d204773a17f91b72a9fc71b674c5548aaf6826040516107079190610893565b60405180910390a250565b5f60015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b5f60025f8381526020019081526020015f205f9054906101000a900460ff169050919050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f819050919050565b5f6107c06107bb6107b68461077e565b61079d565b61077e565b9050919050565b5f6107d1826107a6565b9050919050565b5f6107e2826107c7565b9050919050565b6107f2816107d8565b82525050565b5f60208201905061080b5f8301846107e9565b92915050565b5f5ffd5b5f61081f8261077e565b9050919050565b61082f81610815565b8114610839575f5ffd5b50565b5f8135905061084a81610826565b92915050565b5f6020828403121561086557610864610811565b5b5f6108728482850161083c565b91505092915050565b5f819050919050565b61088d8161087b565b82525050565b5f6020820190506108a65f830184610884565b92915050565b6108b58161087b565b81146108bf575f5ffd5b50565b5f813590506108d0816108ac565b92915050565b5f602082840312156108eb576108ea610811565b5b5f6108f8848285016108c2565b91505092915050565b5f5ffd5b5f819050826020600202820111156109205761091f610901565b5b92915050565b5f8190508260406002028201111561094157610940610901565b5b92915050565b5f8190508260206004028201111561096257610961610901565b5b92915050565b5f5f5f5f5f6101a0868803121561098257610981610811565b5b5f61098f88828901610905565b95505060406109a088828901610926565b94505060c06109b188828901610905565b9350506101006109c388828901610947565b9250506101806109d58882890161083c565b9150509295509295909350565b5f8115159050919050565b6109f6816109e2565b82525050565b5f602082019050610a0f5f8301846109ed565b92915050565b5f82825260208201905092915050565b7f417373657420616c7265616479207265676973746572656400000000000000005f82015250565b5f610a59601883610a15565b9150610a6482610a25565b602082019050919050565b5f6020820190508181035f830152610a8681610a4d565b9050919050565b82818337505050565b610aa260408383610a8d565b5050565b5f60029050919050565b5f81905092915050565b5f819050919050565b610acf60408383610a8d565b5050565b5f610ade8383610ac3565b60408301905092915050565b5f82905092915050565b5f604082019050919050565b610b0981610aa6565b610b138184610ab0565b9250610b1e82610aba565b805f5b83811015610b5657610b338284610aea565b610b3d8782610ad3565b9650610b4883610af4565b925050600181019050610b21565b505050505050565b610b6a60808383610a8d565b5050565b5f61018082019050610b825f830187610a96565b610b8f6040830186610b00565b610b9c60c0830185610a96565b610baa610100830184610b5e565b95945050505050565b610bbc816109e2565b8114610bc6575f5ffd5b50565b5f81519050610bd781610bb3565b92915050565b5f60208284031215610bf257610bf1610811565b5b5f610bff84828501610bc9565b91505092915050565b7f496e76616c69642070726f6f66000000000000000000000000000000000000005f82015250565b5f610c3c600d83610a15565b9150610c4782610c08565b602082019050919050565b5f6020820190508181035f830152610c6981610c30565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b7f496e76616c6964206173736574000000000000000000000000000000000000005f82015250565b5f610cd1600d83610a15565b9150610cdc82610c9d565b602082019050919050565b5f6020820190508181035f830152610cfe81610cc5565b9050919050565b7f42616c616e636520616c726561647920696e697469616c697a656400000000005f82015250565b5f610d39601b83610a15565b9150610d4482610d05565b602082019050919050565b5f6020820190508181035f830152610d6681610d2d565b905091905056fea2646970667358221220afc46bf2a8b3e5ac9c843783e8e3f2e1e75c654d18ac2ac7681f6db30c9cef4864736f6c634300081c0033";

  
      type PrivateTransferConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

      const isSuperArgs = (xs: PrivateTransferConstructorParams): xs is ConstructorParameters<typeof ContractFactory> =>
        xs.length > 1
    

  export class PrivateTransfer__factory extends ContractFactory {
    
      constructor(...args: PrivateTransferConstructorParams) {
        if (isSuperArgs(args)) {
          super(...args);
        } else {
          super(_abi, _bytecode, args[0]);
        }
        
      }
    
    override getDeployTransaction(_verifierAddress: AddressLike, overrides?: NonPayableOverrides & { from?: string }): Promise<ContractDeployTransaction> {
      return super.getDeployTransaction(_verifierAddress, overrides || {});
    };
    override deploy(_verifierAddress: AddressLike, overrides?: NonPayableOverrides & { from?: string }) {
      return super.deploy(_verifierAddress, overrides || {}) as Promise<PrivateTransfer & {
        deploymentTransaction(): ContractTransactionResponse;
      }>;
    }
    override connect(runner: ContractRunner | null): PrivateTransfer__factory {
      return super.connect(runner) as PrivateTransfer__factory;
    }
    
    
    static readonly bytecode = _bytecode;
    static readonly abi = _abi;
    static createInterface(): PrivateTransferInterface {
      return new Interface(_abi) as PrivateTransferInterface;
    }
    
    override attach(address: string | Addressable): PrivateTransfer {
      return super.attach(address) as PrivateTransfer;
    }
  static connect(address: string, runner?: ContractRunner | null): PrivateTransfer {
      return new Contract(address, _abi, runner) as unknown as PrivateTransfer;
    }
  }

  
  